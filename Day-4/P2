//  Important question, try to think on everything in this code.
class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        return kSum(4, nums, 0, target);
    }
    public List<List<Integer>> twoSum(int[] arr, int si, int t)
    {
        List<List<Integer>> res = new ArrayList<>();
        int i=si, j=arr.length-1;
        while(i<j)
        {
            int currSum = arr[i]+arr[j];
            if(currSum == t)
            {
                List<Integer> temp = new ArrayList<>();
                temp.add(arr[i]);
                temp.add(arr[j]);
                res.add(temp);
                // to avoid duplication
                while(i<j && arr[i] == arr[i+1])
                    i++;
                while(i<j && arr[j] == arr[j-1])
                    j--;
                i++;
                j--;
            }
            else if(currSum < t)
                i++;
            else
                j--;
        }
        return res;
    }
        public List<List<Integer>> kSum(int k, int[] arr, int si, int t)
        {
            if(k==2)
                return twoSum(arr, si, t);
            int l=arr.length;
            List<List<Integer>> res = new ArrayList<>();
            for(int i=si;i<=l-k;i++)
            {
                int a=arr[i];
                int rem=t-a;
                List<List<Integer>> temp = kSum(k-1, arr, i+1, rem);
                for(List<Integer> e: temp)
                {
                    e.add(a);
                    res.add(e);
                }
                // to avoid duplicacy
                while(i<l-1 && arr[i] == arr[i+1])
                    i++;
            }
            return res;
        }
}