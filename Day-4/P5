// Very rigid solution. Don't dwell on this too much, but definitely try to understand how is it playing out.
// https://takeuforward.org/data-structure/count-the-number-of-subarrays-with-given-xor-k/
public class Solution {
    public int solve(int[] A, int B) {
        HashMap<Integer,Integer> mp = new HashMap<Integer,Integer>(); 
        int count = 0; 
        int P= 0;
        int n = A.length;
        for(int i = 0;i<n;i++) {
            P = P ^ A[i]; 
            int Q = P ^ B;
            if(mp.containsKey(Q)) 
                count += mp.get(Q); 
            if(P == B) {
                count++; 
            }
            if(mp.containsKey(P)) 
                mp.put(P, mp.get(P) + 1); 
            else 
                mp.put(P, 1); 
        }
        return count; 
    }
}
